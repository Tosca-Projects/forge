#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


- name: Setup Consul config
  hosts: all
  strategy: free
  tasks:
    - name: "get current config of Yorc"
      shell: "cat {{ CONFIG_DIR }}/config.yorc.yaml"
      register: result

    - set_fact:
        yorcConfig: "{{ result.stdout | from_yaml }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "auth_url": "{{ AUTH_URL }}" } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "tenant_name": "{{ TENANT_NAME }}" } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "user_name": "{{ USER_NAME }}" } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "password": "{{ PASSWORD }}" } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "private_network_name": "{{ PRIVATE_NETWORK_NAME }}" } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - set_fact:
        tmp: '{ "infrastructures": { "openstack": { "default_security_groups": {{ DEFAULT_SECURITY_GROUPS }} } } }'
    - set_fact:
        yorcConfig: "{{ yorcConfig | combine(tmp, recursive=True) }}"

    - name: "Output config to file {{ CONFIG_DIR }}/config.yorc.yaml"
      copy:
        content: "{{ yorcConfig | to_yaml }}"
        dest: "{{ CONFIG_DIR }}/config.yorc.yaml"

    - name: "Ensure the file {{ key_pair }} exists"
      stat: path="{{ key_pair }}"
      register: stat_key_pair

    - name: "copy key pair artifact"
      copy:
        src: "{{ key_pair }}"
        dest: "{{ DATA_DIR}}/.ssh/{{ key_pair | basename }}"
        remote_src: yes
      when: stat_key_pair.stat.exists